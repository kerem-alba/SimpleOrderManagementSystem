{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//If the token is sent with interception, there is no need to send header information here, \n//but if the token information does not go in the request header with interception, it must be sent with a method in this class.\nexport let HttpEntityRepositoryService = /*#__PURE__*/(() => {\n  class HttpEntityRepositoryService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    /// /api/[controller] - GET\n    getAll(_url) {\n      return this.httpClient.get(environment.getApiUrl + _url);\n    }\n    //api/[controller]/:id - GET\n    get(_url, id) {\n      return this.httpClient.get(environment.getApiUrl + _url + (id != undefined && id != null ? +id : \"\"));\n    }\n    /// /api/[controller] - POST\n    add(_url, _content) {\n      return this.httpClient.post(environment.getApiUrl + _url, _content);\n    }\n    // /api/[controller] - PUT\n    update(_url, _content) {\n      return this.httpClient.put(environment.getApiUrl + _url, _content);\n    }\n    // /api/[controller]/:id - DELETE\n    delete(_url, id) {\n      return this.httpClient.delete(environment.getApiUrl + _url + id);\n    }\n    static #_ = this.ɵfac = function HttpEntityRepositoryService_Factory(t) {\n      return new (t || HttpEntityRepositoryService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpEntityRepositoryService,\n      factory: HttpEntityRepositoryService.ɵfac\n    });\n  }\n  return HttpEntityRepositoryService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}