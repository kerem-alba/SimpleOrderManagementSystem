{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { CustomerService } from '../../../services/customer.service';\nimport { AlertifyService } from 'app/core/services/alertify.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/customer.service\";\nimport * as i3 from \"app/core/services/alertify.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction CustomerAddDialogComponent_form_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Required\"), \" \");\n  }\n}\nfunction CustomerAddDialogComponent_form_7_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Required\"), \" \");\n  }\n}\nfunction CustomerAddDialogComponent_form_7_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Required\"), \" \");\n  }\n}\nfunction CustomerAddDialogComponent_form_7_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Required\"), \" \");\n  }\n}\nfunction CustomerAddDialogComponent_form_7_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Required\"), \" \");\n  }\n}\nfunction CustomerAddDialogComponent_form_7_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Invalid Email\"), \" \");\n  }\n}\nfunction CustomerAddDialogComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function CustomerAddDialogComponent_form_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.save());\n    });\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"div\", 7)(3, \"mat-form-field\", 8);\n    i0.ɵɵelement(4, \"input\", 9);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵtemplate(6, CustomerAddDialogComponent_form_7_div_6_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"mat-form-field\", 8);\n    i0.ɵɵelement(9, \"input\", 11);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵtemplate(11, CustomerAddDialogComponent_form_7_div_11_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 6)(13, \"div\", 12)(14, \"mat-form-field\", 8);\n    i0.ɵɵelement(15, \"input\", 13);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵtemplate(17, CustomerAddDialogComponent_form_7_div_17_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 6)(19, \"div\", 7)(20, \"mat-form-field\", 8);\n    i0.ɵɵelement(21, \"input\", 14);\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵtemplate(23, CustomerAddDialogComponent_form_7_div_23_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 7)(25, \"mat-form-field\", 8);\n    i0.ɵɵelement(26, \"input\", 15);\n    i0.ɵɵpipe(27, \"translate\");\n    i0.ɵɵtemplate(28, CustomerAddDialogComponent_form_7_div_28_Template, 3, 3, \"div\", 10)(29, CustomerAddDialogComponent_form_7_div_29_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"div\", 6)(31, \"div\", 12)(32, \"mat-checkbox\", 16);\n    i0.ɵɵtext(33);\n    i0.ɵɵpipe(34, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(35, \"button\", 17);\n    i0.ɵɵtext(36);\n    i0.ɵɵpipe(37, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.customerAddForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(5, 14, \"Customer Name\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerAddForm.get(\"customerName\").hasError(\"required\") && ctx_r1.customerAddForm.get(\"customerName\").touched);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(10, 16, \"Customer Code\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerAddForm.get(\"customerCode\").hasError(\"required\") && ctx_r1.customerAddForm.get(\"customerCode\").touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(16, 18, \"Address\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerAddForm.get(\"adress\").hasError(\"required\") && ctx_r1.customerAddForm.get(\"adress\").touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(22, 20, \"Phone Number\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerAddForm.get(\"phoneNumber\").hasError(\"required\") && ctx_r1.customerAddForm.get(\"phoneNumber\").touched);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(27, 22, \"Email\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerAddForm.get(\"email\").hasError(\"required\") && ctx_r1.customerAddForm.get(\"email\").touched);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerAddForm.get(\"email\").hasError(\"email\") && ctx_r1.customerAddForm.get(\"email\").touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(34, 24, \"Active\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(37, 26, \"Save\"));\n  }\n}\nexport let CustomerAddDialogComponent = /*#__PURE__*/(() => {\n  class CustomerAddDialogComponent {\n    constructor(formBuilder, customerService, alertifyService, dialogRef) {\n      this.formBuilder = formBuilder;\n      this.customerService = customerService;\n      this.alertifyService = alertifyService;\n      this.dialogRef = dialogRef;\n    }\n    ngOnInit() {\n      this.createCustomerAddForm();\n    }\n    createCustomerAddForm() {\n      this.customerAddForm = this.formBuilder.group({\n        id: [0],\n        customerName: ['', Validators.required],\n        customerCode: ['', Validators.required],\n        email: ['', Validators.required],\n        status: [true],\n        adress: [''],\n        phoneNumber: ['']\n      });\n    }\n    save() {\n      if (this.customerAddForm.valid) {\n        console.log('Form submitted', this.customerAddForm.value);\n        const customer = Object.assign({}, this.customerAddForm.value);\n        this.customerService.addCustomer(customer).subscribe(data => {\n          this.alertifyService.success(data);\n          this.dialogRef.close(true); // Dialog'u kapat ve başarılı sonucu bildir\n        }, error => {\n          console.error('Error adding customer:', error);\n        });\n      } else {\n        console.log('Form is invalid');\n        console.log(this.customerAddForm.controls); // Kontrol edilecek alanlar\n        for (const control in this.customerAddForm.controls) {\n          if (this.customerAddForm.controls[control].errors) {\n            console.log(`Error in ${control}:`, this.customerAddForm.controls[control].errors);\n          }\n        }\n      }\n    }\n    onNoClick() {\n      this.dialogRef.close(); // Dialog'u kapat\n    }\n    static #_ = this.ɵfac = function CustomerAddDialogComponent_Factory(t) {\n      return new (t || CustomerAddDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.MatDialogRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CustomerAddDialogComponent,\n      selectors: [[\"customer-add-dialog\"]],\n      decls: 8,\n      vars: 1,\n      consts: [[1, \"modal-body\", \"text-center\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"aria-label\", \"Close\", 3, \"click\"], [1, \"margin-top\"], [1, \"separator\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"customerName\", \"name\", \"customerName\", \"formControlName\", \"customerName\", 3, \"placeholder\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"customerCode\", \"name\", \"customerCode\", \"formControlName\", \"customerCode\", 3, \"placeholder\"], [1, \"col-md-12\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"adress\", \"name\", \"adress\", \"formControlName\", \"adress\", 3, \"placeholder\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"phoneNumber\", \"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 3, \"placeholder\"], [\"matInput\", \"\", \"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 3, \"placeholder\"], [\"formControlName\", \"status\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"pull-right\"], [1, \"clearfix\"], [1, \"alert\", \"alert-danger\"]],\n      template: function CustomerAddDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function CustomerAddDialogComponent_Template_button_click_1_listener() {\n            return ctx.onNoClick();\n          });\n          i0.ɵɵelementStart(2, \"mat-icon\");\n          i0.ɵɵtext(3, \"close\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"h4\", 2);\n          i0.ɵɵtext(5, \"Customer Form\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"div\", 3);\n          i0.ɵɵtemplate(7, CustomerAddDialogComponent_form_7_Template, 39, 28, \"form\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.customerAddForm);\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatIconButton, i7.MatIcon, i8.MatFormField, i9.MatInput, i10.TranslatePipe]\n    });\n  }\n  return CustomerAddDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}