{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Size } from '../../models/size.enum';\nimport { ProductService } from '../../services/product.service';\nimport { AlertifyService } from 'app/core/services/alertify.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/product.service\";\nimport * as i3 from \"app/core/services/alertify.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/icon\";\nfunction ProductAddDialogComponent_form_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 1, \"Required\"), \" \");\n  }\n}\nfunction ProductAddDialogComponent_form_7_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\nfunction ProductAddDialogComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function ProductAddDialogComponent_form_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.save());\n    });\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"div\", 7)(3, \"mat-form-field\", 8);\n    i0.ɵɵelement(4, \"input\", 9);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵtemplate(6, ProductAddDialogComponent_form_7_div_6_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"mat-form-field\", 8);\n    i0.ɵɵelement(9, \"input\", 11);\n    i0.ɵɵtemplate(10, ProductAddDialogComponent_form_7_div_10_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"button\", 12);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.productAddForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \" \", i0.ɵɵpipeBind1(5, 6, \"name\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.productAddForm.get(\"name\").hasError(\"required\") && ctx_r1.productAddForm.get(\"name\").touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.productAddForm.get(\"colorId\").hasError(\"required\") && ctx_r1.productAddForm.get(\"colorId\").dirty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 8, \"Save\"));\n  }\n}\nexport let ProductAddDialogComponent = /*#__PURE__*/(() => {\n  class ProductAddDialogComponent {\n    constructor(formBuilder, productService, alertifyService, dialogRef) {\n      this.formBuilder = formBuilder;\n      this.productService = productService;\n      this.alertifyService = alertifyService;\n      this.dialogRef = dialogRef;\n      this.sizeOptions = [{\n        label: 'Small',\n        value: Size.S\n      }, {\n        label: 'Medium',\n        value: Size.M\n      }, {\n        label: 'Large',\n        value: Size.L\n      }, {\n        label: 'Extra Large',\n        value: Size.XL\n      }];\n    }\n    ngOnInit() {\n      this.createProductAddForm();\n    }\n    createProductAddForm() {\n      this.productAddForm = this.formBuilder.group({\n        id: [0],\n        name: [\"\", Validators.required],\n        size: [null, Validators.required],\n        colorId: [\"\", Validators.required],\n        status: [true]\n      });\n    }\n    save() {\n      if (this.productAddForm.valid) {\n        console.log('Form submitted', this.productAddForm.value);\n        const product = Object.assign({}, this.productAddForm.value);\n        this.productService.addProduct(product).subscribe(data => {\n          this.alertifyService.success(data);\n          this.dialogRef.close(true); // Dialog'u kapat ve başarılı sonucu bildir\n        }, error => {\n          console.error('Error adding product:', error);\n        });\n      } else {\n        console.log('Form is invalid');\n        console.log(this.productAddForm.controls); // Kontrol edilecek alanlar\n        for (const control in this.productAddForm.controls) {\n          if (this.productAddForm.controls[control].errors) {\n            console.log(`Error in ${control}:`, this.productAddForm.controls[control].errors);\n          }\n        }\n      }\n    }\n    onNoClick() {\n      this.dialogRef.close(); // Dialog'u kapat\n    }\n    static #_ = this.ɵfac = function ProductAddDialogComponent_Factory(t) {\n      return new (t || ProductAddDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.MatDialogRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductAddDialogComponent,\n      selectors: [[\"product-add-dialog\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 1,\n      consts: [[1, \"modal-body\", \"text-center\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"aria-label\", \"Close\", 3, \"click\"], [1, \"margin-top\"], [1, \"separator\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 3, \"placeholder\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"colorId\", \"type\", \"number\", \"id\", \"colorId\", \"name\", \"colorId\", \"formControlName\", \"colorId\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"pull-right\"], [1, \"clearfix\"], [1, \"alert\", \"alert-danger\"]],\n      template: function ProductAddDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function ProductAddDialogComponent_Template_button_click_1_listener() {\n            return ctx.onNoClick();\n          });\n          i0.ɵɵelementStart(2, \"mat-icon\");\n          i0.ɵɵtext(3, \"close\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"h4\", 2);\n          i0.ɵɵtext(5, \"Product Form\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"div\", 3);\n          i0.ɵɵtemplate(7, ProductAddDialogComponent_form_7_Template, 15, 10, \"form\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.productAddForm);\n        }\n      },\n      dependencies: [MatFormFieldModule, i5.MatFormField, MatSelectModule, MatInputModule, i6.MatInput, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, MatIconModule, i7.MatIcon]\n    });\n  }\n  return ProductAddDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}