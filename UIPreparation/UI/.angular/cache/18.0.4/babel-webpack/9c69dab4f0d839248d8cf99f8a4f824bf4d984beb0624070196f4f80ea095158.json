{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor() {}\n    startAnimationForLineChart(chart) {\n      let seq, delays, durations;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n      chart.on('draw', function (data) {\n        if (data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify()\n            }\n          });\n        } else if (data.type === 'point') {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: 'ease'\n            }\n          });\n        }\n      });\n      seq = 0;\n    }\n    startAnimationForBarChart(chart) {\n      let seq2, delays2, durations2;\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function (data) {\n        if (data.type === 'bar') {\n          seq2++;\n          data.element.animate({\n            opacity: {\n              begin: seq2 * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: 'ease'\n            }\n          });\n        }\n      });\n      seq2 = 0;\n    }\n    ngOnInit() {\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\n      const dataDailySalesChart = {\n        labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        series: [[12, 17, 7, 17, 23, 18, 38]]\n      };\n      const optionsDailySalesChart = {\n        low: 0,\n        high: 50,\n        // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n        chartPadding: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        }\n      };\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n      const dataCompletedTasksChart = {\n        labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\n        series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n      };\n      // start animation for the Completed Tasks Chart - Line Chart\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n      var datawebsiteViewsChart = {\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n      };\n      var optionswebsiteViewsChart = {\n        axisX: {\n          showGrid: false\n        },\n        low: 0,\n        high: 1000,\n        chartPadding: {\n          top: 0,\n          right: 5,\n          bottom: 0,\n          left: 0\n        }\n      };\n      var responsiveOptions = [['screen and (max-width: 640px)', {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]];\n      //start animation for the Emails Subscription Chart\n    }\n    static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 0,\n      vars: 0,\n      template: function DashboardComponent_Template(rf, ctx) {}\n    });\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}