{"ast":null,"code":"import { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../../../environments/environment';\nimport { StatusEnum } from '../model/StatusEnum.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    getOrderList() {\n      return this.httpClient.get(environment.getApiUrl + \"/orders/getallwithdetails \");\n    }\n    getOrderById(id) {\n      const params = new HttpParams().set('id', id.toString());\n      return this.httpClient.get(environment.getApiUrl + `/orders/getbyid`, {\n        params\n      });\n    }\n    updateOrder(order) {\n      var result = this.httpClient.put(environment.getApiUrl + `/orders/`, order, {\n        responseType: 'text'\n      });\n      return result;\n    }\n    deleteOrder(id) {\n      return this.httpClient.request('delete', environment.getApiUrl + `/orders/${id}`);\n    }\n    addOrder(order) {\n      order.orderStatus = StatusEnum.Pending;\n      console.log('Gönderilen ürün:', order);\n      return this.httpClient.post(environment.getApiUrl + \"/orders/\", order, {\n        responseType: 'text'\n      });\n    }\n    approveOrder(orderId) {\n      const body = {\n        orderId: orderId,\n        orderStatus: StatusEnum.Approved\n      };\n      return this.httpClient.put(environment.getApiUrl + `/orders/`, body, {\n        responseType: 'text'\n      });\n    }\n    rejectOrder(orderId) {\n      const body = {\n        orderId: orderId,\n        orderStatus: StatusEnum.Rejected\n      };\n      return this.httpClient.put(environment.getApiUrl + `/orders/`, body, {\n        responseType: 'text'\n      });\n    }\n    cancelOrder(orderId) {\n      const body = {\n        orderId: orderId,\n        orderStatus: StatusEnum.Cancelled\n      };\n      return this.httpClient.put(environment.getApiUrl + `/orders/`, body, {\n        responseType: 'text'\n      });\n    }\n    static #_ = this.ɵfac = function OrderService_Factory(t) {\n      return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrderService,\n      factory: OrderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}