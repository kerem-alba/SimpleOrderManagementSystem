{"ast":null,"code":"import { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { Product } from \"./models/Product\";\nimport { ProductService } from \"./services/product.service\";\nimport { NgMultiSelectDropDownModule } from \"ng-multiselect-dropdown\";\nimport { AlertifyService } from \"app/core/services/alertify.service\";\nimport { LookUpService } from \"app/core/services/LookUp.service\";\nimport { environment } from \"environments/environment\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { MatPaginator, MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { AuthService } from \"../../admin/login/services/auth.service\";\nimport { SweetAlert2Module } from \"@sweetalert2/ngx-sweetalert2\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from \"@angular/material/core\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { Size } from \"./models/size.enum\";\nimport { ProductAddDialogComponent } from \"./dialog/product-add-dialog/product-add-dialog.component\";\nimport { ProductUpdateDialogComponent } from \"./dialog/product-update-dialog/product-update-dialog.component\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/product.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"app/core/services/alertify.service\";\nimport * as i4 from \"app/core/services/LookUp.service\";\nimport * as i5 from \"../../admin/login/services/auth.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/paginator\";\nimport * as i12 from \"@angular/material/checkbox\";\nimport * as i13 from \"@sweetalert2/ngx-sweetalert2\";\nimport * as i14 from \"@angular/material/grid-list\";\nimport * as i15 from \"@angular/material/card\";\nimport * as i16 from \"@angular/material/chips\";\nconst _c0 = () => [10, 25, 50, 100];\nfunction ProductComponent_a_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function ProductComponent_a_8_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ProductAddDialog());\n    });\n    i0.ɵɵelement(1, \"i\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductComponent_mat_grid_tile_17_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ProductComponent_mat_grid_tile_17_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const element_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ProductUpdateDialog(element_r5.id));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"edit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ProductComponent_mat_grid_tile_17_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ProductComponent_mat_grid_tile_17_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const element_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteProduct(element_r5.id));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const deleteSwal_r7 = i0.ɵɵreference(20);\n    i0.ɵɵproperty(\"swal\", deleteSwal_r7);\n  }\n}\nfunction ProductComponent_mat_grid_tile_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 19)(1, \"mat-card\", 20)(2, \"mat-card-header\")(3, \"div\")(4, \"mat-card-title\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"h6\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"mat-card-content\");\n    i0.ɵɵtext(9, \" \\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\\" \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-card-footer\", 21)(11, \"mat-chip-set\", 22)(12, \"mat-chip\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"mat-chip\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"mat-card-content\")(17, \"mat-checkbox\", 23);\n    i0.ɵɵtext(18, \"Status\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"mat-card-actions\");\n    i0.ɵɵtemplate(20, ProductComponent_mat_grid_tile_17_button_20_Template, 3, 0, \"button\", 24)(21, ProductComponent_mat_grid_tile_17_button_21_Template, 3, 1, \"button\", 25);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"colspan\", 2)(\"rowspan\", 2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(element_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"ID: \", element_r5.id, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Color: \", element_r5.colorId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Size: \", element_r5.size, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", element_r5.status)(\"disabled\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.checkClaim(\"UpdateProductCommand\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.checkClaim(\"DeleteProductCommand\"));\n  }\n}\nexport let ProductComponent = /*#__PURE__*/(() => {\n  class ProductComponent {\n    constructor(productService, formBuilder, alertifyService, lookUpService, authService, dialog) {\n      this.productService = productService;\n      this.formBuilder = formBuilder;\n      this.alertifyService = alertifyService;\n      this.lookUpService = lookUpService;\n      this.authService = authService;\n      this.dialog = dialog;\n      this.displayedColumns = [\"id\", \"name\", \"colorId\", \"status\", \"size\", \"update\", \"delete\"];\n      this.product = new Product();\n      this.productList = [];\n      this.isGroupChange = false;\n      this.isClaimChange = false;\n      this.Filter = \"\";\n      this.sizeOptions = [{\n        label: 'Small',\n        value: Size.S\n      }, {\n        label: 'Medium',\n        value: Size.M\n      }, {\n        label: 'Large',\n        value: Size.L\n      }, {\n        label: 'Extra Large',\n        value: Size.XL\n      }];\n    }\n    ProductAddDialog() {\n      const dialogRef = this.dialog.open(ProductAddDialogComponent, {\n        width: '500px'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.getProductList(); // Listesi güncelle\n      });\n    }\n    ProductUpdateDialog(productId) {\n      const dialogRef = this.dialog.open(ProductUpdateDialogComponent, {\n        data: {\n          id: productId\n        },\n        width: '500px'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.getProductList(); // Listesi güncelle\n      });\n    }\n    ngAfterViewInit() {\n      this.getProductList();\n    }\n    ngOnInit() {\n      this.createProductAddForm();\n      this.dropdownSettings = environment.getDropDownSetting;\n      this.lookUpService.getGroupLookUp().subscribe(data => {\n        this.groupDropdownList = data;\n      });\n      this.lookUpService.getOperationClaimLookUp().subscribe(data => {\n        this.claimDropdownList = data;\n      });\n    }\n    createProductAddForm() {\n      this.productAddForm = this.formBuilder.group({\n        id: [0],\n        name: [\"\", Validators.required],\n        size: [null, Validators.required],\n        colorId: [\"\", Validators.required],\n        status: [true]\n      });\n    }\n    getProductList() {\n      this.productService.getProductList().subscribe(data => {\n        this.productList = data;\n        this.dataSource = new MatTableDataSource(data);\n        this.configDataTable();\n        // Verinin doğru formatta olduğundan emin olun\n        this.dataSource.data.forEach(product => {\n          console.log(\"Product:\", product); // Kullanıcı verilerini kontrol etmek için\n          console.log(\"Type of status:\", typeof product.status); // status alanının türünü kontrol etmek için\n        });\n      }, error => {\n        console.error(\"Error fetching product list:\", error);\n      });\n    }\n    clearFormGroup(group) {\n      group.markAsUntouched();\n      group.reset();\n      Object.keys(group.controls).forEach(key => {\n        group.get(key).setErrors(null);\n        if (key === \"id\") group.get(key).setValue(0);else if (key === \"status\") group.get(key).setValue(true);\n      });\n      console.log(group.controls); // Form kontrollerinin sıfırlanmış hallerini kontrol etmek için\n    }\n    setProductId(id) {\n      this.id = id;\n    }\n    save() {\n      if (this.productAddForm.valid) {\n        console.log('Form submitted', this.productAddForm.value);\n        this.product = Object.assign({}, this.productAddForm.value);\n        if (this.product.id == 0) this.addProduct();else this.updateProduct();\n      } else {\n        console.log('Form is invalid');\n        console.log(this.productAddForm.controls); // Kontrol edilecek alanlar\n        for (const control in this.productAddForm.controls) {\n          if (this.productAddForm.controls[control].errors) {\n            console.log(`Error in ${control}:`, this.productAddForm.controls[control].errors);\n          }\n        }\n      }\n    }\n    addProduct() {\n      this.productService.addProduct(this.product).subscribe(data => {\n        this.getProductList();\n        this.product = new Product();\n        this.alertifyService.success(data);\n        this.clearFormGroup(this.productAddForm);\n      }, error => {\n        console.error('Error adding product:', error);\n      });\n    }\n    getProductById(id) {\n      this.clearFormGroup(this.productAddForm);\n      this.productService.getProductById(id).subscribe(data => {\n        this.product = data;\n        this.productAddForm.patchValue(data);\n      });\n    }\n    updateProduct() {\n      this.productService.updateProduct(this.product).subscribe(data => {\n        var index = this.productList.findIndex(x => x.id == this.product.id);\n        this.productList[index] = this.product;\n        this.dataSource = new MatTableDataSource(this.productList);\n        this.configDataTable();\n        this.product = new Product();\n        this.alertifyService.success(data);\n        this.clearFormGroup(this.productAddForm);\n      });\n    }\n    deleteProduct(id) {\n      this.productService.deleteProduct(id).subscribe(data => {\n        this.alertifyService.success(data.toString());\n        var index = this.productList.findIndex(x => x.id == id);\n        this.productList[index].status = false;\n        this.dataSource = new MatTableDataSource(this.productList);\n        this.configDataTable();\n      });\n    }\n    checkClaim(claim) {\n      return this.authService.claimGuard(claim);\n    }\n    configDataTable() {\n      if (this.dataSource) {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }\n    }\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n    static #_ = this.ɵfac = function ProductComponent_Factory(t) {\n      return new (t || ProductComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.LookUpService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.MatDialog));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductComponent,\n      selectors: [[\"product\"]],\n      viewQuery: function ProductComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatPaginator, 5);\n          i0.ɵɵviewQuery(MatSort, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([SweetAlert2Module.forRoot().providers]), i0.ɵɵStandaloneFeature],\n      decls: 21,\n      vars: 7,\n      consts: [[\"input\", \"\"], [\"deleteSwal\", \"\"], [1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [\"class\", \"pull-right\", 3, \"click\", 4, \"ngIf\"], [1, \"col-md-4\", \"pull-right\"], [\"matInput\", \"\", \"placeholder\", \"\", 3, \"keyup\"], [1, \"card-body\"], [\"cols\", \"8\", \"gutterSize\", \"16px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"pageSizeOptions\"], [\"title\", \"DeleteConfirm\", \"icon\", \"error\", 3, \"showCancelButton\", \"confirmButtonText\", \"cancelButtonText\"], [1, \"pull-right\", 3, \"click\"], [\"title\", \"Add\", 1, \"far\", \"fa-plus-square\", \"fa-2x\", 2, \"color\", \"white\"], [3, \"colspan\", \"rowspan\"], [\"appearance\", \"outlined\", 1, \"product-card\"], [1, \"product-card-footer\"], [\"aria-label\", \"Chihuahua traits\"], [3, \"checked\", \"disabled\"], [\"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"swal\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"mat-icon-button\", \"\", 3, \"click\", \"swal\"]],\n      template: function ProductComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5)(4, \"div\", 6)(5, \"div\", 7)(6, \"h4\", 8);\n          i0.ɵɵtext(7, \"Product List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, ProductComponent_a_8_Template, 2, 0, \"a\", 9);\n          i0.ɵɵelementStart(9, \"div\", 10)(10, \"mat-form-field\")(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Filter\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 11, 0);\n          i0.ɵɵlistener(\"keyup\", function ProductComponent_Template_input_keyup_13_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.applyFilter($event));\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"div\", 12)(16, \"mat-grid-list\", 13);\n          i0.ɵɵtemplate(17, ProductComponent_mat_grid_tile_17_Template, 22, 10, \"mat-grid-tile\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"mat-paginator\", 15);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelement(19, \"swal\", 16, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.checkClaim(\"CreateProductCommand\"));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.dataSource == null ? null : ctx.dataSource.filteredData);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(6, _c0));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"showCancelButton\", true)(\"confirmButtonText\", \"OK\")(\"cancelButtonText\", \"Cancel\");\n        }\n      },\n      dependencies: [CommonModule, i7.NgForOf, i7.NgIf, FormsModule, ReactiveFormsModule, MatFormFieldModule, i8.MatFormField, i8.MatLabel, MatInputModule, i9.MatInput, MatButtonModule, i10.MatIconButton, MatPaginatorModule, i11.MatPaginator, MatSortModule, MatTableModule, MatCheckboxModule, i12.MatCheckbox, NgMultiSelectDropDownModule, SweetAlert2Module, i13.SwalComponent, i13.SwalDirective, MatRippleModule, MatSelectModule, MatTooltipModule, TranslateModule, MatDialogModule, MatGridListModule, i14.MatGridList, i14.MatGridTile, MatCardModule, i15.MatCard, i15.MatCardActions, i15.MatCardContent, i15.MatCardFooter, i15.MatCardHeader, i15.MatCardTitle, MatChipsModule, i16.MatChip, i16.MatChipSet],\n      styles: [\"[_nghost-%COMP%]     .multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-size:12px;font-weight:400;line-height:1.1;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}[_nghost-%COMP%]     .multiselect-dropdown .dropdown-btn .selected-item{background:#9c27b0!important}[_nghost-%COMP%]     .multiselect-item-checkbox>input[type=checkbox]:checked+div:before{background:#9c27b0!important}.no-sort[_ngcontent-%COMP%]:after{display:none!important;background-image:url(https://picsum.photos/200)!important}.product-card[_ngcontent-%COMP%]{max-width:400px;min-width:-moz-fit-content;min-width:fit-content}.product-card-footer[_ngcontent-%COMP%]{padding:24px}\"]\n    });\n  }\n  return ProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}