{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { LocalStorageService } from 'app/core/services/local-storage.service';\nimport { environment } from 'environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/services/local-storage.service\";\nexport let TokenService = /*#__PURE__*/(() => {\n  class TokenService {\n    constructor(httpClient, storageService) {\n      this.httpClient = httpClient;\n      this.storageService = storageService;\n    }\n    refreshToken() {\n      if (this.storageService.getItem(\"refreshToken\") !== null) return this.httpClient.post(environment.getApiUrl + \"/Auth/refresh-token\", {\n        refreshToken: this.storageService.getItem(\"refreshToken\")\n      }).pipe(tap(res => {\n        if (res.success) {\n          this.storageService.setToken(res.data.token);\n          this.storageService.setItem(\"refreshToken\", res.data.refreshToken);\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function TokenService_Factory(t) {\n      return new (t || TokenService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenService,\n      factory: TokenService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TokenService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}