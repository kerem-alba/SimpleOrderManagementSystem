{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProductService } from '../../services/product.service';\nimport { AlertifyService } from 'app/core/services/alertify.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/product.service\";\nimport * as i3 from \"app/core/services/alertify.service\";\nimport * as i4 from \"@angular/material/dialog\";\nexport let ProductUpdateDialogComponent = /*#__PURE__*/(() => {\n  class ProductUpdateDialogComponent {\n    constructor(formBuilder, productService, alertifyService, dialogRef, data) {\n      this.formBuilder = formBuilder;\n      this.productService = productService;\n      this.alertifyService = alertifyService;\n      this.dialogRef = dialogRef;\n      this.data = data;\n    }\n    ngOnInit() {\n      this.createProductUpdateForm();\n      this.getProductById(this.data.id);\n    }\n    createProductUpdateForm() {\n      this.productUpdateForm = this.formBuilder.group({\n        id: [0],\n        name: ['', Validators.required],\n        size: [null, Validators.required],\n        colorId: ['', Validators.required],\n        status: [true]\n      });\n    }\n    getProductById(id) {\n      this.productService.getProductById(id).subscribe(product => {\n        this.productUpdateForm.patchValue(product);\n      }, error => {\n        console.error('Error fetching product:', error);\n      });\n    }\n    save() {\n      if (this.productUpdateForm.valid) {\n        const product = Object.assign({}, this.productUpdateForm.value);\n        this.productService.updateProduct(product).subscribe(data => {\n          this.alertifyService.success('Product updated successfully');\n          this.dialogRef.close(true); // Dialog'u kapat ve başarılı sonucu bildir\n        }, error => {\n          console.error('Error updating product:', error);\n          this.alertifyService.error('An error occurred while updating the product');\n        });\n      }\n    }\n    onNoClick() {\n      this.dialogRef.close(); // Dialog'u kapat\n    }\n    static #_ = this.ɵfac = function ProductUpdateDialogComponent_Factory(t) {\n      return new (t || ProductUpdateDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductUpdateDialogComponent,\n      selectors: [[\"app-product-update-dialog\"]],\n      decls: 2,\n      vars: 0,\n      template: function ProductUpdateDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \" product-update-dialog works!\\n\");\n          i0.ɵɵelementEnd();\n        }\n      }\n    });\n  }\n  return ProductUpdateDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}