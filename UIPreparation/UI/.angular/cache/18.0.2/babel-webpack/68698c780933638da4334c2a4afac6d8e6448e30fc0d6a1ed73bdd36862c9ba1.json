{"ast":null,"code":"import { Location, PopStateEvent } from '@angular/common';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport * as $ from \"jquery\";\nimport { AuthService } from 'app/core/components/admin/login/services/auth.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"app/core/components/admin/login/services/auth.service\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"../../footer/footer.component\";\nimport * as i6 from \"../../navbar/navbar.component\";\nimport * as i7 from \"../../sidebar/sidebar.component\";\nfunction AdminLayoutComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"app-sidebar\")(2, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AdminLayoutComponent = /*#__PURE__*/(() => {\n  class AdminLayoutComponent {\n    constructor(location, router, authService, translate) {\n      this.location = location;\n      this.router = router;\n      this.authService = authService;\n      this.translate = translate;\n      this.yScrollStack = [];\n      this.translate.setDefaultLang(\"tr-TR\");\n      this.translate.use('tr-TR');\n    }\n    isLoggedIn() {\n      return this.authService.loggedIn();\n    }\n    ngOnInit() {\n      this.translate.use('tr-TR');\n      if (this.isLoggedIn()) {\n        const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n        if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\n          // if we are on windows OS we activate the perfectScrollbar function\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\n        } else {\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\n        }\n        const elemMainPanel = document.querySelector('.main-panel');\n        const elemSidebar = document.querySelector('.sidebar .sidebar-wrapper');\n        this.location.subscribe(ev => {\n          this.lastPoppedUrl = ev.url;\n        });\n        this.router.events.subscribe(event => {\n          if (event instanceof NavigationStart) {\n            if (event.url != this.lastPoppedUrl) this.yScrollStack.push(window.scrollY);\n          } else if (event instanceof NavigationEnd) {\n            if (event.url == this.lastPoppedUrl) {\n              this.lastPoppedUrl = undefined;\n              window.scrollTo(0, this.yScrollStack.pop());\n            } else window.scrollTo(0, 0);\n          }\n        });\n        this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n          elemMainPanel.scrollTop = 0;\n          elemSidebar.scrollTop = 0;\n        });\n        if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n          let ps = new PerfectScrollbar(elemMainPanel);\n          ps = new PerfectScrollbar(elemSidebar);\n        }\n        const window_width = $(window).width();\n        let $sidebar = $('.sidebar');\n        let $sidebar_responsive = $('body > .navbar-collapse');\n        let $sidebar_img_container = $sidebar.find('.sidebar-background');\n        if (window_width > 767) {\n          if ($('.fixed-plugin .dropdown').hasClass('show-dropdown')) {\n            $('.fixed-plugin .dropdown').addClass('open');\n          }\n        }\n        $('.fixed-plugin a').click(function (event) {\n          // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\n          if ($(this).hasClass('switch-trigger')) {\n            if (event.stopPropagation) {\n              event.stopPropagation();\n            } else if (window.event) {\n              window.event.cancelBubble = true;\n            }\n          }\n        });\n        $('.fixed-plugin .badge').click(function () {\n          let $full_page_background = $('.full-page-background');\n          $(this).siblings().removeClass('active');\n          $(this).addClass('active');\n          var new_color = $(this).data('color');\n          if ($sidebar.length !== 0) {\n            $sidebar.attr('data-color', new_color);\n          }\n          if ($sidebar_responsive.length != 0) {\n            $sidebar_responsive.attr('data-color', new_color);\n          }\n        });\n        $('.fixed-plugin .img-holder').click(function () {\n          let $full_page_background = $('.full-page-background');\n          $(this).parent('li').siblings().removeClass('active');\n          $(this).parent('li').addClass('active');\n          var new_image = $(this).find(\"img\").attr('src');\n          if ($sidebar_img_container.length != 0) {\n            $sidebar_img_container.fadeOut('fast', function () {\n              $sidebar_img_container.css('background-image', 'url(\"' + new_image + '\")');\n              $sidebar_img_container.fadeIn('fast');\n            });\n          }\n          if ($full_page_background.length != 0) {\n            $full_page_background.fadeOut('fast', function () {\n              $full_page_background.css('background-image', 'url(\"' + new_image + '\")');\n              $full_page_background.fadeIn('fast');\n            });\n          }\n          if ($sidebar_responsive.length != 0) {\n            $sidebar_responsive.css('background-image', 'url(\"' + new_image + '\")');\n          }\n        });\n      }\n    }\n    ngAfterViewInit() {\n      this.runOnRouteChange();\n    }\n    isMaps(path) {\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      titlee = titlee.slice(1);\n      if (path == titlee) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    runOnRouteChange() {\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n        const elemMainPanel = document.querySelector('.main-panel');\n        const ps = new PerfectScrollbar(elemMainPanel);\n        ps.update();\n      }\n    }\n    isMac() {\n      let bool = false;\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n        bool = true;\n      }\n      return bool;\n    }\n    static #_ = this.ɵfac = function AdminLayoutComponent_Factory(t) {\n      return new (t || AdminLayoutComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.TranslateService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminLayoutComponent,\n      selectors: [[\"app-admin-layout\"]],\n      decls: 6,\n      vars: 1,\n      consts: [[1, \"wrapper\"], [\"class\", \"sidebar\", \"data-color\", \"danger\", \"data-background-color\", \"white\", \"data-image\", \"./assets/img/sidebar-1.jpg\", 4, \"ngIf\"], [1, \"main-panel\"], [\"data-color\", \"danger\", \"data-background-color\", \"white\", \"data-image\", \"./assets/img/sidebar-1.jpg\", 1, \"sidebar\"], [1, \"sidebar-background\", 2, \"background-image\", \"url(./assets/img/sidebar-4.jpg)\"]],\n      template: function AdminLayoutComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, AdminLayoutComponent_div_1_Template, 3, 0, \"div\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2);\n          i0.ɵɵelement(3, \"app-navbar\")(4, \"router-outlet\")(5, \"app-footer\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n        }\n      },\n      dependencies: [i1.NgIf, i5.FooterComponent, i6.NavbarComponent, i7.SidebarComponent, i2.RouterOutlet],\n      styles: [\"tbody[_ngcontent-%COMP%]{height:400px;overflow-y:scroll;display:block}th[_ngcontent-%COMP%]{position:sticky;top:0}\"]\n    });\n  }\n  return AdminLayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}