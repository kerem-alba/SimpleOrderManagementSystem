{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    getUserList() {\n      return this.httpClient.get(environment.getApiUrl + \"/users/\");\n    }\n    getUserById(id) {\n      return this.httpClient.get(environment.getApiUrl + `/users/${id}`);\n    }\n    addUser(user) {\n      var result = this.httpClient.post(environment.getApiUrl + \"/users/\", user, {\n        responseType: 'text'\n      });\n      return result;\n    }\n    updateUser(user) {\n      var result = this.httpClient.put(environment.getApiUrl + \"/users/\", user, {\n        responseType: 'text'\n      });\n      return result;\n    }\n    deleteUser(id) {\n      return this.httpClient.request('delete', environment.getApiUrl + `/users/${id}`);\n    }\n    getUserGroupPermissions(userId) {\n      return this.httpClient.get(environment.getApiUrl + `/user-groups/users/${userId}/groups`);\n    }\n    getUserClaims(userId) {\n      return this.httpClient.get(environment.getApiUrl + `/user-claims/users/${userId}`);\n    }\n    saveUserClaims(userId, claims) {\n      var result = this.httpClient.put(environment.getApiUrl + \"/user-claims/\", {\n        UserId: userId,\n        ClaimIds: claims\n      }, {\n        responseType: 'text'\n      });\n      return result;\n    }\n    saveUserGroupPermissions(userId, groups) {\n      var result = this.httpClient.put(environment.getApiUrl + \"/user-groups/\", {\n        UserId: userId,\n        GroupId: groups\n      }, {\n        responseType: 'text'\n      });\n      return result;\n    }\n    saveUserPassword(command) {\n      var result = this.httpClient.put(environment.getApiUrl + \"/Auth/user-password\", command, {\n        responseType: 'text'\n      });\n      return result;\n    }\n    static #_ = this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}